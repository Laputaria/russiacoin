* update translations (ping tcatm on IRC for now)

* update (commit) version in sources
  bitcoin-qt.pro
  src/version.h
  share/setup.nsi
  doc/README*

* tag version in git

   git tag -a v0.5.1

* write release notes.  git shortlog helps a lot:

   git shortlog --no-merges v0.5.0..

* perform gitian builds

  * From a directory containing the bitcoin source, gitian-builder and gitian.sigs
   export SIGNER=(your gitian key, ie bluematt, sipa, etc)
   export VERSION=0.5.1
   cd ./gitian-builder

  * Fetch and build inputs:
   mkdir -p inputs; cd inputs/
   wget 'http://miniupnp.tuxfamily.org/files/download.php?file=miniupnpc-2.1.tar.gz' -O miniupnpc-2.1.tar.gz
   wget 'https://www.openssl.org/source/openssl-1.0.2q.tar.gz'
   wget 'http://download.oracle.com/otn/berkeley-db/db-18.1.25.tar.gz'
   wget 'http://zlib.net/zlib-1.2.11.tar.gz'
   wget 'ftp://ftp.simplesystems.org/pub/libpng/png/src/libpng16/libpng-1.6.34.tar.gz'
   wget 'https://fukuchi.org/works/qrencode/qrencode-4.0.2.tar.bz2'
   wget 'https://dl.bintray.com/boostorg/release/1.69.0/source/boost_1_69_0.tar.bz2'
   wget 'https://download.qt.io/archive/qt/5.12/5.12.0/single/qt-everywhere-src-5.12.0.tar.xz'
   cd ..
   ./bin/gbuild ../bitcoin/contrib/gitian-descriptors/boost-win64.yml
   cp build/out/boost-win64-1.69.0-gitian.7z inputs/
   ./bin/gbuild ../bitcoin/contrib/gitian-descriptors/qt-win64.yml
   cp build/out/qt-win64-5.12.0-gitian.7z inputs/
   ./bin/gbuild ../bitcoin/contrib/gitian-descriptors/deps-win64.yml
   cp build/out/bitcoin-deps-0.0.3.7z inputs/

  * Build bitcoind and bitcoin-qt on Linux64, and Win64:
   ./bin/gbuild --commit bitcoin=v${VERSION} ../bitcoin/contrib/gitian-descriptors/gitian.yml
   ./bin/gsign --signer $SIGNER --release ${VERSION} --destination ../gitian.sigs/ ../bitcoin/contrib/gitian-descriptors/gitian.yml
   pushd build/out
   7z -r bitcoin-${VERSION}-linux-gitian.7z *
   mv bitcoin-${VERSION}-linux-gitian.7z ../../
   popd
   ./bin/gbuild --commit bitcoin=v${VERSION} ../bitcoin/contrib/gitian-descriptors/gitian-win64.yml
   ./bin/gsign --signer $SIGNER --release ${VERSION}-win64 --destination ../gitian.sigs/ ../bitcoin/contrib/gitian-descriptors/gitian-win64.yml
   pushd build/out
   7z -r bitcoin-${VERSION}-win64-gitian.7z *
   mv bitcoin-${VERSION}-win64-gitian.7z ../../
   popd

  Build output expected:
  1. linux 64-bit binaries + source (bitcoin-${VERSION}-linux-gitian.7z)
  2. windows 64-bit binary, installer + source (bitcoin-${VERSION}-win64-gitian.7z)
  3. Gitian signatures (in gitian.sigs/${VERSION}[-win64]/(your gitian key)/

* repackage gitian builds for release as stand-alone zip/tar/installer exe

  * Linux .tar.gz:
   un7z bitcoin-${VERSION}-linux-gitian.7z -d bitcoin-${VERSION}-linux
   tar czvf bitcoin-${VERSION}-linux.tar.gz bitcoin-${VERSION}-linux
   rm -rf bitcoin-${VERSION}-linux

  * Windows .zip and setup.exe:
   un7z bitcoin-${VERSION}-win64-gitian.7z -d bitcoin-${VERSION}-win64
   mv bitcoin-${VERSION}-win64/bitcoin-*-setup.exe .
   7z -r bitcoin-${VERSION}-win64.7z bitcoin-${VERSION}-win64
   rm -rf bitcoin-${VERSION}-win64

* perform Mac build
  See this blog post for how Gavin set up his build environment to build the OSX
  release; note that a patched version of macdeployqt is not needed anymore, as
  the required functionality and fixes are implemented directly in macdeployqtplus:
    http://gavintech.blogspot.com/2011/11/deploying-bitcoin-qt-on-osx.html
  Gavin also had trouble with the macports py37-appscript package; he
  ended up installing a version that worked with: /usr/bin/easy_install-3.7 appscript

  qmake RELEASE=1 USE_UPNP=1 USE_QRCODE=1 bitcoin-qt.pro
  make
  export QTDIR=/opt/local/share/qt4  # needed to find translations/qt_*.qm files
  T=$(contrib/qt_translations.py $QTDIR/translations src/qt/locale)
  python3.7.2 contrib/macdeploy/macdeployqtplus Bitcoin-Qt.app -add-qt-tr $T -dmg -fancy contrib/macdeploy/fancy.plist

 Build output expected:
  Bitcoin-Qt.dmg

* upload builds to SourceForge

* create SHA1920SUMS for builds, and PGP-sign it

* update bitcoin.org version

* update forum version

* update wiki download links

* update wiki changelog: https://en.bitcoin.it/wiki/Changelog

* Commit your signature to gitian.sigs:
  pushd gitian.sigs
  git add ${VERSION}/${SIGNER}
  git add ${VERSION}-win64/${SIGNER}
  git commit -a
  git push  # Assuming you can push to the gitian.sigs tree
  popd

-------------------------------------------------------------------------

* After 3 or more people have gitian-built, repackage gitian-signed zips:

  * From a directory containing bitcoin source, gitian.sigs and gitian zips
   export VERSION=0.5.1
   mkdir bitcoin-${VERSION}-linux-gitian
   pushd bitcoin-${VERSION}-linux-gitian
   un7z ../bitcoin-${VERSION}-linux-gitian.7z
   mkdir gitian
   cp ../bitcoin/contrib/gitian-downloader/*.pgp ./gitian/
   for signer in $(ls ../gitian.sigs/${VERSION}/); do
     cp ../gitian.sigs/${VERSION}/${signer}/bitcoin-build.assert ./gitian/${signer}-build.assert
     cp ../gitian.sigs/${VERSION}/${signer}/bitcoin-build.assert.sig ./gitian/${signer}-build.assert.sig
   done
   7z -r bitcoin-${VERSION}-linux-gitian.7z *
   cp bitcoin-${VERSION}-linux-gitian.7z ../
   popd
   mkdir bitcoin-${VERSION}-win64-gitian
   pushd bitcoin-${VERSION}-win64-gitian
   un7z ../bitcoin-${VERSION}-win64-gitian.7z
   mkdir gitian
   cp ../bitcoin/contrib/gitian-downloader/*.pgp ./gitian/
   for signer in $(ls ../gitian.sigs/${VERSION}-win64/); do
     cp ../gitian.sigs/${VERSION}-win64/${signer}/bitcoin-build.assert ./gitian/${signer}-build.assert
     cp ../gitian.sigs/${VERSION}-win64/${signer}/bitcoin-build.assert.sig ./gitian/${signer}-build.assert.sig
   done
   7z -r bitcoin-${VERSION}-win64-gitian.7z *
   cp bitcoin-${VERSION}-win64-gitian.7z ../
   popd

  * Upload gitian zips to SourceForge
